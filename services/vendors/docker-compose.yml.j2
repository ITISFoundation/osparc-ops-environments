services:
  manual:
    image: ${VENDOR_MANUAL_IMAGE}
    init: true
{%- raw %}
    hostname: "v-manual-{{.Node.Hostname}}-{{.Task.Slot}}"
{%- endraw %}
    deploy:
      replicas: ${VENDOR_MANUAL_REPLICAS}
      placement:
        constraints:
          - node.labels.simcore==true
      resources:
        limits:
          cpus: "1"
          memory: 2G
        reservations:
          cpus: "0.5"
          memory: 1G
      update_config:
        parallelism: 1
        order: start-first
        failure_action: continue
        delay: 10s
      labels:
        - traefik.enable=true
        - traefik.swarm.network=${PUBLIC_NETWORK}
        - traefik.http.services.vendor_manual.loadbalancer.server.port=${VENDOR_MANUAL_PORT}
        - traefik.http.routers.vendor_manual.entrypoints=https
        - traefik.http.routers.vendor_manual.tls=true
        - traefik.http.routers.vendor_manual.rule={{ generate_vendors_traefik_rule(VENDOR_MANUAL_PRODUCTS, VENDOR_MANUAL_SUBDOMAIN_PREFIX) }}
        - traefik.http.routers.vendor_manual.middlewares=ops_gzip@swarm, authenticated_platform_user@swarm
    networks:
      - public
  chat-backend:
    image: ${VENDOR_CHATBOT_BACKEND_IMAGE}
    init: true
    env_file:
      - .env
{%- raw %}
    hostname: "v-chat-backend-{{.Node.Hostname}}-{{.Task.Slot}}"
{%- endraw %}
    deploy:
      replicas: ${VENDOR_CHATBOT_BACKEND_REPLICAS}
      placement:
        constraints:
          - node.labels.simcore==true
      resources:
        limits:
          cpus: "1.0"
          memory: 2.5G
        reservations:
          cpus: "0.1"
          memory: 512M
      update_config:
        parallelism: 1
        order: start-first
        failure_action: continue
        delay: 10s
      labels:
        - traefik.enable=true
        - traefik.swarm.network=${PUBLIC_NETWORK}
        - traefik.http.services.vendor_chat_backend.loadbalancer.server.port=${VENDOR_CHATBOT_BACKEND_PORT}
        - traefik.http.routers.vendor_chat_backend.entrypoints=https
        - traefik.http.routers.vendor_chat_backend.tls=true
        - traefik.http.routers.vendor_chat_backend.rule=(PathPrefix(`/v1/`) && ({{ generate_vendors_traefik_rule(VENDOR_CHATBOT_PRODUCTS, VENDOR_CHATBOT_SUBDOMAIN_PREFIX) }}))
        - traefik.http.routers.vendor_chat_backend.middlewares=authenticated_platform_user@swarm
    networks:
      - public
networks:
  public:
    external: true
    name: ${PUBLIC_NETWORK}
