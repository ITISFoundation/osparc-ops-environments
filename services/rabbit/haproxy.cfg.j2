global
    log stdout format raw local0
    maxconn 4096
    pidfile /tmp/haproxy.pid

# haproxy by default resolves server hostname only once
# this breaks if container restarts. By using resolvers
# we tell haproxy to re-resolve the hostname (so container
# restarts are handled properly)
resolvers dockerdns
    nameserver dns1 127.0.0.11:53
    resolve_retries 3
    timeout resolve 1s
    timeout retry   1s
    hold other      10s
    hold refused    10s
    hold nx         10s
    hold timeout    10s
    hold valid      10s
    hold obsolete   10s

defaults
    log global
    mode tcp
    option tcplog

    timeout connect 5s
    timeout client 30s
    timeout server 30s

frontend rabbit
    bind *:5672
    default_backend rabbit_backends

frontend rabbit_dashboard
    bind *:15672
    default_backend rabbit_dashboard_backends

backend rabbit_backends
    balance roundrobin

    # init-addrs libc,none - start even if there arenâ€™t any running
    server rabbit01 rabbit_rabbit01:5672 check resolvers dockerdns init-addr libc,none inter 5s rise 2 fall 3 send-proxy
    server rabbit02 rabbit_rabbit02:5672 check resolvers dockerdns init-addr libc,none inter 5s rise 2 fall 3 send-proxy
    server rabbit03 rabbit_rabbit03:5672 check resolvers dockerdns init-addr libc,none inter 5s rise 2 fall 3 send-proxy

backend rabbit_dashboard_backends
    mode http
    balance roundrobin

    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }

    server rabbit01 rabbit_rabbit01:15672 check resolvers dockerdns init-addr libc,none inter 5s rise 2 fall 3
    server rabbit02 rabbit_rabbit02:15672 check resolvers dockerdns init-addr libc,none inter 5s rise 2 fall 3
    server rabbit03 rabbit_rabbit03:15672 check resolvers dockerdns init-addr libc,none inter 5s rise 2 fall 3
