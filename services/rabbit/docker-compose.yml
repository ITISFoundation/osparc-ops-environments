services:
  rabbit01:
    image: itisfoundation/rabbitmq:4.1.2-management
    init: true
    # https://docs.docker.com/reference/cli/docker/service/create/#create-services-using-templates
    hostname: "{{.Service.Name}}"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASSWORD}
      RABBITMQ_NODENAME: "rabbit@{{.Service.Name}}"
    volumes:
      - rabbit_data:/var/lib/rabbitmq
    # TODO: sync with existing rabbit attached networks
    networks:
      - rabbit
    # TODO: consider another healthcheck (e.g. check kubernetes operator)
    healthcheck:
      # see https://www.rabbitmq.com/monitoring.html#individual-checks for info about health-checks available in rabbitmq
      test: rabbitmq-diagnostics -q status
      interval: 5s
      timeout: 30s
      retries: 5
      start_period: 5s

  busybox:
    image: ubuntu:22.04
    command: /bin/sh -c "sleep infinity"
    networks:
      - rabbit
networks:
  # TODO: consider creating it externally for better control over subnets size and ip ranges
  rabbit:
    name: ${RABBIT_DOCKER_SWARM_NETWORK_NAME}
    driver: overlay
    attachable: true

volumes:
  rabbit_data:
    name: ${STACK_NAME}_rabbit_data
