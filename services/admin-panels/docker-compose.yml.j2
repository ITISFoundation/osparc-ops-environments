version: "3.7"
configs:
  adminpanel-jupyter-server-config:
    file: ./jupyter_server_config.py
{% for item in contents %}
  {{ item.name }}:
    file: ./data/{{ item.name }}{% endfor %}
services:
  adminpanels:
    image: jupyter/base-notebook:18b10e7f732d
    user: root
    networks:
      - public
      - monitored
    environment:
    # This contains all relevant secrets so that the admin panels may use them to access the services
      - MONITORING_DOMAIN=${MONITORING_DOMAIN}
      - DEPLOYMENT_FQDNS=${DEPLOYMENT_FQDNS}
       # S3
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_BUCKET=${S3_BUCKET}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - STORAGE_DOMAIN=${STORAGE_DOMAIN}
       # Postgres
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_ENDPOINT=${POSTGRES_ENDPOINT}
       # Rabbit
      - RABBIT_HOST=${RABBIT_HOST}
      - RABBIT_LOG_CHANNEL=${RABBIT_LOG_CHANNEL}
      - RABBIT_PASSWORD=${RABBIT_PASSWORD}
      - RABBIT_PORT=${RABBIT_PORT}
      - RABBIT_USER=${RABBIT_USER}
      # Redis
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
       # Registry
      - REGISTRY_PW=${REGISTRY_PW}
      - REGISTRY_S3_ACCESS_KEY=${REGISTRY_S3_ACCESS_KEY}
      - REGISTRY_S3_BUCKET=${REGISTRY_S3_BUCKET}
      - REGISTRY_S3_ENDPOINT=${REGISTRY_S3_ENDPOINT}
      - REGISTRY_S3_SECRET_KEY=${REGISTRY_S3_SECRET_KEY}
      - REGISTRY_S3_SECURE=${REGISTRY_S3_SECURE}
      - REGISTRY_SSL=${REGISTRY_SSL}
      - REGISTRY_USER=${REGISTRY_USER}
       # Mail server
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_TLS_ENABLED=${SMTP_TLS_ENABLED}
       # Deployment specifics
      - MACHINE_FQDN=${MACHINE_FQDN}
      - PREFIX_STACK_NAME=${PREFIX_STACK_NAME}
       # Webserver session secret
      - WEBSERVER_SESSION_SECRET_KEY=${WEBSERVER_SESSION_SECRET_KEY}
       ## Mattermost config
      - MATTERMOST_CHANNEL_ID=${MATTERMOST_CHANNEL_ID}
      - MATTERMOST_ENABLED=${MATTERMOST_ENABLED}
      - MATTERMOST_PERSONAL_TOKEN=${MATTERMOST_PERSONAL_TOKEN}
      - MATTERMOST_URL=${MATTERMOST_URL}
       # Dockerhub
      - DOCKER_HUB_URL=${DOCKER_HUB_URL}
      - DOCKER_HUB_LOGIN=${DOCKER_HUB_LOGIN}
      - DOCKER_HUB_PASSWORD=${DOCKER_HUB_PASSWORD}
      # Jupyter Admin panel password
      - JUPYTER_TOKEN=${JUPYTER_TOKEN}
      - GRANT_SUDO=yes
      # Hardcoded passwords
      - PUPPETEER_PASSWORD=${PUPPETEER_PASSWORD}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    configs:
      {% for item in contents %}
      - source: {{ item.name }}
        target: /home/jovyan/{{ item.name }}
        mode: 0555{% endfor %}
      - source: adminpanel-jupyter-server-config
        target: /home/jovyan/jupyter_server_config.py
        mode: 0555
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=${PUBLIC_NETWORK}
        - traefik.http.services.adminpanels.loadbalancer.server.port=8888
        - traefik.http.routers.adminpanels.rule=Host(`${ADMINPANELS_DOMAIN}`)
        - traefik.http.routers.adminpanels.entrypoints=https
        - traefik.http.routers.adminpanels.priority=1
        - traefik.http.routers.adminpanels.tls=true
        - traefik.http.routers.adminpanels.middlewares=ops_whitelist_ips@swarm, ops_gzip@swarm
      placement:
        constraints:
          - node.labels.ops==true
      resources:
        limits:
          memory: "2G"
          cpus: "1"
        reservations:
          memory: "128M"
          cpus: "0.1"

networks:
  public:
    external: true
    name: ${PUBLIC_NETWORK}
  monitored:
    name: ${MONITORED_NETWORK}
    external: true
