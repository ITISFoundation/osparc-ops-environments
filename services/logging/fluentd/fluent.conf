# Monitoring
<source>
  @type monitor_agent
  bind 0.0.0.0
  port 24220
</source>

# Prometheus metrics
<source>
  @type prometheus
  bind 0.0.0.0
  port 24231
  metrics_path metrics
</source>

#<system>
#  log_level debug
#</system>

<source>
  @type prometheus_output_monitor
  interval 10
  <labels>
    hostname ${hostname}
  </labels>
</source>

# Input: Receive logs from Docker containers
<source>
  @type forward
  port 24224
  bind 0.0.0.0
</source>

# Add additional metadata
<filter docker.**>
  @type record_transformer
  <record>
    hostname "#{Socket.gethostname}"
    fluentd_hostname "#{ENV['FLUENTD_HOSTNAME']}"
    tag ${tag}
  </record>
</filter>

# Output to both Graylog (GELF) and Loki
<match docker.**>
  @type copy

  # Output to Graylog using GELF
  <store>
    @type gelf
    host graylog
    port 12201
    protocol udp
    add_msec_time true
    flush_interval 5s
    <buffer>
      @type file
      path /fluentd/buffer/graylog
      flush_thread_count 8
      flush_interval 5s
      retry_forever true
      retry_max_interval 30
      chunk_limit_size 8M
      total_limit_size 1G
    </buffer>
    <secondary>
      @type file
      path /fluentd/log/graylog-error
      append true
      <format>
        @type json
      </format>
    </secondary>
  </store>

  # Output to Loki
  <store>
    @type loki
    url "#{ENV['LOKI_URL']}"
    extra_labels {"job": "docker"}
    line_format json
    username ""
    password ""
    flush_interval 5s
    <buffer>
      @type file
      path /fluentd/buffer/loki
      flush_thread_count 8
      flush_interval 5s
      retry_forever true
      retry_max_interval 30
      chunk_limit_size 8M
      total_limit_size 1G
    </buffer>
    <secondary>
      @type file
      path /fluentd/log/loki-error
      append true
      <format>
        @type json
      </format>
    </secondary>
  </store>
</match>
