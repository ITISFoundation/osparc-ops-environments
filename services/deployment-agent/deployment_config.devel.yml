## Runtime configuration for the simcore_service_deployment_agent application.
##
version: "1.0"
rest:
  version: v0
  location: oas3/v0/openapi.yaml
main:
  log_level: DEBUG
  host: 127.0.0.1
  port: 8888
  watched_git_repositories:
    # all git repositories that shall be controlled
    - id: simcore-github-repo
      url: ${GIT_SIMCORE_REPO_URL}
      branch: ${GIT_SIMCORE_REPO_BRANCH}
      username:
      password:
      # tags: ^v[0-9]+.[0-9]+.[0-9]+$
      paths:
        # lists the files where to look for changes in the repo
        - services/docker-compose.yml
        - .env-devel
    - id: simcore-ops-repo
      url: ${GIT_OPS_REPO_URL}
      branch: ${GIT_OPS_REPO_BRANCH}
      username: ${GIT_OPS_LOGIN}
      password: ${GIT_OPS_PASSWORD}
      paths:
        - services/simcore/envsubst_escape_dollar_sign.py
        - services/simcore/docker-compose.deploy.yml
        - services/simcore/.env
        - repo.config
  docker_private_registries:
    # lists registries and their credentials if necessary to check for services to download from
    - url: ${DOCKER_HUB_URL}
      username: ${DOCKER_HUB_LOGIN}
      password: ${DOCKER_HUB_PASSWORD}
  docker_stack_recipe:
    # defines the recipe to generate the docker compose style stack file to be deployed in the swarm
    # An optional command line may be defined to that end that generate the docker compose file.
    files:
      - id: simcore-ops-repo
        paths:
          - services/simcore/envsubst_escape_dollar_sign.py
          - services/simcore/docker-compose.deploy.yml
          - services/simcore/.env
    workdir: simcore-github-repo # defines where the files above shall be copied. Can be defined as temp also to copy them in a temporary directory
    command: >
        mv .env .env.platform &&
        python3 envsubst_escape_dollar_sign.py .env.platform .env.platform.escaped &&
        cat .env-devel >> .env.nosub &&
        cat .env.platform.escaped >> .env.nosub &&
        envsubst < .env.nosub > .env &&
        ./scripts/docker/docker-compose-config.bash -e .env services/docker-compose.yml docker-compose.deploy.yml > stack.yml &&
        cp stack.yml /home/scu
    stack_file: stack.yml # the output file of the command above, or just the file to use
    excluded_services: [webclient]
    excluded_volumes: []
    additional_parameters:
      extra_hosts: []
      environment: []
    services_prefix: ${PREFIX_STACK_NAME}
  portainer:
    # lists the portainer instances to call upon
    - url: http://portainer:9000
      endpoint_id: -1
      username: ${PORTAINER_USER}
      password: ${PORTAINER_PASSWORD}
      stack_name: ${SIMCORE_STACK_NAME}
  polling_interval: 60
