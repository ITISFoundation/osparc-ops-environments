version: "3.7"
services:
  traefik:
    command:
      - "--api=true"
      - "--api.dashboard=true"
      - "--log.level=${OPS_TRAEFIK_LOGLEVEL}"
      - "--accesslog=false"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      - "--entryPoints.metrics.address=:8082"
      - "--metrics.prometheus.entryPoint=metrics"
      - "--entryPoints.http.address=:80"
      - "--entryPoints.http.transport.respondingTimeouts.idleTimeout=21600s" #6h, for https://github.com/traefik/traefik/issues/10805
      - "--entryPoints.http.transport.respondingTimeouts.writeTimeout=21600s" #6h, for https://github.com/traefik/traefik/issues/10805
      - "--entryPoints.http.transport.respondingTimeouts.readTimeout=21600s" #6h, for https://github.com/traefik/traefik/issues/10805
      - "--entryPoints.https.address=:443"
      - "--providers.swarm.endpoint=unix:///var/run/docker.sock"
      - "--providers.swarm.exposedByDefault=false"
      - "--providers.swarm.constraints=!LabelRegex(`io.simcore.zone`, `.+`)"
      - "--core.defaultRuleSyntax=v2"
      - "--tracing=true"
      - "--tracing.addinternals"
      - "--tracing.otlp=true"
      - "--tracing.otlp.http=true"
      - "--certificatesresolvers.lehttpchallenge.acme.httpchallenge=true"
      - "--certificatesresolvers.lehttpchallenge.acme.httpchallenge.entrypoint=http"
      - "--certificatesresolvers.lehttpchallenge.acme.email=${OSPARC_DEVOPS_MAIL_ADRESS}"
      - "--certificatesresolvers.lehttpchallenge.acme.storage=/letsencrypt/acme.json"
      # uncomment the caserver when testing such that let's encrypt does not ban us
      - '--certificatesresolvers.lehttpchallenge.acme.caserver=${OPS_TRAEFIK_LETSENCRYPT_ACME_CA_SERVER}'
    volumes:
      - "letsencrypt_certs:/letsencrypt"
    deploy:
      labels:
        - traefik.http.routers.api.tls.certresolver=lehttpchallenge
  whoami:
    deploy:
      labels:
        - traefik.http.routers.whoami.tls.certresolver=lehttpchallenge
    networks:
      - public

volumes:
  letsencrypt_certs:
