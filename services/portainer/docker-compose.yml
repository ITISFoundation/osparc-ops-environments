version: "3.7"

services:
  agent:
    image: portainer/agent:2.20.3 # Needs to match portainer-ce version
    init: true
    environment:
      # REQUIRED: Should be equal to the service name prefixed by "tasks." when
      # deployed inside an overlay network
      AGENT_CLUSTER_ADDR: tasks.agent
      # AGENT_PORT: 9001
      # LOG_LEVEL: debug
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      resources:
        limits:
          cpus: "1"
          memory: 100M
        reservations:
          cpus: "0.5"
          memory: 50M

  portainer:
    image: portainer/portainer-ce:2.20.3
    init: true
    command: >
      -H tcp://tasks.agent:9001 --tlsskipverify
      --admin-password-file=/run/secrets/portainer_admin_password
      --no-analytics
    volumes:
      - portainer_data:/data
    networks:
      - agent_network
      - public
    secrets:
      - portainer_admin_password
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: "2"
          memory: 250M
        reservations:
          cpus: "0.1"
          memory: 128M
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.docker.network=${PUBLIC_NETWORK}
        - traefik.http.services.portainer.loadbalancer.server.port=9000
        - traefik.http.routers.portainer.rule=Host(`${MONITORING_DOMAIN}`) && PathPrefix(`/portainer`)
        - traefik.http.routers.portainer.entrypoints=https
        - traefik.http.routers.portainer.tls=true
        - traefik.http.middlewares.portainer_replace_regex.replacepathregex.regex=^/portainer/?(.*)$$
        - traefik.http.middlewares.portainer_replace_regex.replacepathregex.replacement=/$${1}
        - traefik.http.routers.portainer.middlewares=ops_whitelist_ips@swarm, ops_gzip@swarm, portainer_replace_regex

networks:
  agent_network:
    driver: overlay
    attachable: true
  public:
    external: true
    name: ${PUBLIC_NETWORK}

volumes:
  portainer_data:

secrets:
  portainer_admin_password:
    external: true
