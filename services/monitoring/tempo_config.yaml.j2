server:
  http_listen_port: 3200

distributor:
  receivers:                           # this configuration will listen on all ports and protocols that tempo is capable of.
    otlp:
      protocols:
        http:
        grpc:

#ingester:
#  max_block_duration: 5m               # cut the headblock when this much time passes. this should probably be left alone normally

compactor:
  compaction:
    block_retention: 96h             # overall Tempo trace retention.

memberlist:
  abort_if_cluster_join_fails: false
  bind_port: 7946
  join_members:
  - tempo1:7946
  - tempo2:7946
  - tempo3:7946

metrics_generator:
  registry:
    external_labels:
      source: tempo
      cluster: {{ MACHINE_FQDN }}
  storage:
    path: /var/tempo/generator/wal
    remote_write:
      - url: http://prometheuscatchall:9090/api/v1/write

storage:
  trace:
    backend: s3                        # backend configuration to use
    wal:
      path: /var/tempo/wal             # where to store the wal locally
    s3:
      bucket: {{ TEMPO_S3_BUCKET }}                    # how to store data in s3
      endpoint: {{STORAGE_DOMAIN}}
      region: {{S3_REGION}}
      access_key: {{S3_ACCESS_KEY}}
      secret_key:  {{S3_SECRET_KEY}}
      insecure: false
      tls_insecure_skip_verify: true
      # For using AWS, select the appropriate regional endpoint and region
      # endpoint: s3.dualstack.us-west-2.amazonaws.com
      # region: us-west-2

#querier:
#  frontend_worker:
#    frontend_address: {{MONITORING_DOMAIN}}/tempo:9095

overrides:
  defaults:
    metrics_generator:
      processors: ['service-graphs', 'span-metrics']
