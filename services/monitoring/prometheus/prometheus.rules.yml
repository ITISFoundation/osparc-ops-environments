groups:
  - name: http_requests_total-rate-5min
    rules:
      - record: http_requests_total:rate5m
        expr: rate(http_requests_total[5m])

  - name: container_tasks_state-count_by_image
    rules:
      - record: container_tasks_state:count_by_image
        expr: count by (image)(container_tasks_state{state="running", image=~".*/simcore/services/.*"})

  - name: simcore_simcore_service_webserver_services_started_total-sum_by_key_tag
    rules:
      - record: simcore_simcore_service_webserver_services_started_total:sum_by_service_key_service_tag
        expr: sum by (service_key, service_tag, deployment)(simcore_simcore_service_webserver_services_started_total)

  - name: simcore_simcore_service_director_services_started_total-sum_by_key_tag
    rules:
      - record: simcore_simcore_service_director_services_started_total:sum_by_service_key_service_tag
        expr: sum by (service_key, service_tag, deployment)(simcore_simcore_service_director_services_started_total)

  - name: node_cpu_seconds_total-nonidle-sum_over_nodes
    rules:
      - record: node_cpu_seconds_total:nonidle_sum_over_nodes
        expr: sum(node_cpu_seconds_total{mode!="idle"})

  - name: node_cpu_seconds_total-nonidle-increase-over-nodes-12weeks
    interval: 1h
    rules:
      - record: node_cpu_seconds_total:nonidle_increase_over_nodes_12weeks
        expr: sum(increase(node_cpu_seconds_total{mode!="idle"}[12w]))

  - name: cpu_usage_per_simcore_service
    interval: 120s
    rules:
      - record: osparc_metrics:cpu_usage_per_simcore_service
        expr: sum by (service_name, instance) (label_replace(irate(container_cpu_usage_seconds_total{container_label_com_docker_swarm_service_name=~".*simcore.*"}[1m]), "service_name", "$1", "container_label_com_docker_swarm_service_name", ".*_(.*)")) * 100
  - name: cpu_usage_per_node
    interval: 60s
    rules:
      - record: osparc_metrics:cpu_usage_per_node
        expr: 100 - (avg(irate(node_cpu_seconds_total{job="node-exporter",mode="idle"}[50s]) * on(instance) group_left(node_name) node_meta{}) by (instance) * 100)
