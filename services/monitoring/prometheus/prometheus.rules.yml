groups:
  - name: osparc_webserver_services_started_total-sum_by_key_tag
    rules:
      - record: osparc_webserver_services_started_total_sum_by_service_key_service_tag
        expr: sum by (service_key, service_tag, deployment)(simcore_simcore_service_webserver_services_started_total)
  - name: osparc_director_services_started_total-sum_by_key_tag
    rules:
      - record: osparc_director_services_started_total_sum_by_service_key_service_tag
        expr: sum by (service_key, service_tag, deployment)(simcore_simcore_service_director_services_started_total)
  - name: osparc_cpu_usage_per_node
    interval: 60s
    rules:
      - record: osparc_cpu_usage_per_node_percentage
        expr: 100 - (avg(irate(node_cpu_seconds_total{job="node-exporter",mode="idle"}[50s])) by (instance,node_name) * 100)
  - name: osparc_cpu_seconds_per_node
    interval: 60s
    rules:
      - record: osparc_cpu_seconds_per_node
        expr: sum by (instance) (node_cpu_seconds_total{mode!="idle", job="node-exporter"})
  - name: osparc_node_cpu_seconds_total-nonidle-increase-over-nodes-12weeks
    interval: 180s
    rules:
      - record: osparc_node_cpu_seconds_total_nonidle_increase_over_nodes_12weeks
        expr: sum(increase(osparc_cpu_seconds_per_node[12w]))
  - name: osparc_container_instances_s4lcorelite
    interval: 60s
    rules:
      - record: osparc_cpu_usage_per_node_percentage
        expr: count(container_memory_usage_bytes{image=~"^.*[.osparc.io].*/simcore/services/dynamic/s4l-core-lite.*$",container_label_simcore_user_agent!="puppeteer"}) OR clamp_max(absent(container_memory_usage_bytes{image=~"^.*[.osparc.io].*/simcore/services/dynamic/s4l-core-lite.*$",container_label_simcore_user_agent!="puppeteer"}),0)
  - name: osparc_autoscaling_machines_active
    interval: 60s
    rules:
      - record: osparc_autoscaling_machines_active
        expr: sum(count_values("instance",node_exporter_build_info{instance=~"^ip-.*$"}))
  - name: osparc_autoscaling_machines_buffer
    interval: 60s
    rules:
      - record: osparc_autoscaling_machines_buffer
        expr: sum(swarm_node_info{instance=~"^ip-.*$"}) - ( sum(count_values("instance",node_boot_time_seconds{instance=~"^ip-.*$"})) OR clamp_max(absent(node_boot_time_seconds{instance=~"^ip-.*$"}),0) )
