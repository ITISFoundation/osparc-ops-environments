{
  "interval": "1m",
  "name": "osparc_alerts",
  "rules": [
    {
      "expr": "",
      "for": "10m",
      "grafana_alert": {
        "condition": "B",
        "data": [
          {
            "datasourceUid": "RmZEr52nz",
            "model": {
              "exemplar": false,
              "expr": "clamp_max(avg by (instance) (sum by (instance)(rate(process_cpu_seconds_total[5m])) / (sum by (instance) (rate(node_cpu_seconds_total{job=\"node-exporter\", mode=~\"(idle)\"}[5m])))),1)",
              "hide": false,
              "interval": "",
              "intervalMs": 1000,
              "legendFormat": "{{instance}}",
              "maxDataPoints": 43200,
              "refId": "A"
            },
            "queryType": "",
            "refId": "A",
            "relativeTimeRange": {
              "from": 900,
              "to": 0
            }
          },
          {
            "datasourceUid": "-100",
            "model": {
              "conditions": [
                {
                  "evaluator": {
                    "params": [
                      0.91
                    ],
                    "type": "gt"
                  },
                  "operator": {
                    "type": "and"
                  },
                  "query": {
                    "params": [
                      "A"
                    ]
                  },
                  "reducer": {
                    "params": [],
                    "type": "avg"
                  },
                  "type": "query"
                }
              ],
              "datasource": {
                "type": "grafana-expression",
                "uid": "-100"
              },
              "hide": false,
              "intervalMs": 1000,
              "maxDataPoints": 43200,
              "refId": "B",
              "type": "classic_conditions"
            },
            "queryType": "",
            "refId": "B",
            "relativeTimeRange": {
              "from": 0,
              "to": 0
            }
          }
        ],
        "exec_err_state": "Alerting",
        "intervalSeconds": 60,
        "is_paused": false,
        "no_data_state": "Alerting",
        "rule_group": "osparc_alerts",
        "title": "cpu_usage_alert",
        "updated": "2023-04-13T08:31:35Z",
        "version": 2
      }
    },
    {
      "expr": "",
      "for": "2h",
      "grafana_alert": {
        "condition": "C",
        "data": [
          {
            "datasourceUid": "RmZEr52nz",
            "model": {
              "editorMode": "code",
              "expr": "sum(swarm_manager_tasks_total{state=\"pending\"})",
              "hide": false,
              "intervalMs": 1000,
              "legendFormat": "__auto",
              "maxDataPoints": 43200,
              "range": true,
              "refId": "A"
            },
            "queryType": "",
            "refId": "A",
            "relativeTimeRange": {
              "from": 1800,
              "to": 0
            }
          },
          {
            "datasourceUid": "__expr__",
            "model": {
              "conditions": [
                {
                  "evaluator": {
                    "params": [],
                    "type": "gt"
                  },
                  "operator": {
                    "type": "and"
                  },
                  "query": {
                    "params": [
                      "B"
                    ]
                  },
                  "reducer": {
                    "params": [],
                    "type": "last"
                  },
                  "type": "query"
                }
              ],
              "datasource": {
                "type": "__expr__",
                "uid": "__expr__"
              },
              "expression": "A",
              "hide": false,
              "intervalMs": 1000,
              "maxDataPoints": 43200,
              "reducer": "min",
              "refId": "B",
              "settings": {
                "mode": "replaceNN",
                "replaceWithValue": 0
              },
              "type": "reduce"
            },
            "queryType": "",
            "refId": "B",
            "relativeTimeRange": {
              "from": 1800,
              "to": 0
            }
          },
          {
            "datasourceUid": "__expr__",
            "model": {
              "conditions": [
                {
                  "evaluator": {
                    "params": [
                      0.95
                    ],
                    "type": "gt"
                  },
                  "operator": {
                    "type": "and"
                  },
                  "query": {
                    "params": [
                      "C"
                    ]
                  },
                  "reducer": {
                    "params": [],
                    "type": "last"
                  },
                  "type": "query"
                }
              ],
              "datasource": {
                "type": "__expr__",
                "uid": "__expr__"
              },
              "expression": "B",
              "hide": false,
              "intervalMs": 1000,
              "maxDataPoints": 43200,
              "refId": "C",
              "type": "threshold"
            },
            "queryType": "",
            "refId": "C",
            "relativeTimeRange": {
              "from": 1800,
              "to": 0
            }
          }
        ],
        "exec_err_state": "Error",
        "intervalSeconds": 60,
        "is_paused": false,
        "no_data_state": "NoData",
        "rule_group": "osparc_alerts",
        "title": "pending_services_alert",
        "updated": "2023-04-12T12:19:35Z",
        "version": 3
      }
    },
    {
      "annotations": {
        "description": "Checks for container killed, non-zero exit code shutdown or oom-event. Restart the docker-events-exporter after tracing the unexpected shutdown to reset the alert.",
        "summary": "Checks for container killed, non-zero exit code shutdown or oom-event. Restart the docker-events-exporter after tracing the unexpected shutdown to reset the alert."
      },
      "expr": "",
      "for": "4m",
      "grafana_alert": {
        "condition": "C",
        "data": [
          {
            "datasourceUid": "RmZEr52nz",
            "model": {
              "editorMode": "code",
              "expr": "increase(docker_events{action=\"oom\"}[1m]) > 0",
              "hide": false,
              "intervalMs": 1000,
              "legendFormat": "__auto",
              "maxDataPoints": 43200,
              "range": true,
              "refId": "A"
            },
            "queryType": "",
            "refId": "A",
            "relativeTimeRange": {
              "from": 300,
              "to": 0
            }
          },
          {
            "datasourceUid": "__expr__",
            "model": {
              "conditions": [
                {
                  "evaluator": {
                    "params": [],
                    "type": "gt"
                  },
                  "operator": {
                    "type": "and"
                  },
                  "query": {
                    "params": [
                      "B"
                    ]
                  },
                  "reducer": {
                    "params": [],
                    "type": "last"
                  },
                  "type": "query"
                }
              ],
              "datasource": {
                "type": "__expr__",
                "uid": "__expr__"
              },
              "expression": "A",
              "hide": false,
              "intervalMs": 1000,
              "maxDataPoints": 43200,
              "reducer": "max",
              "refId": "B",
              "settings": {
                "mode": "dropNN"
              },
              "type": "reduce"
            },
            "queryType": "",
            "refId": "B",
            "relativeTimeRange": {
              "from": 300,
              "to": 0
            }
          },
          {
            "datasourceUid": "__expr__",
            "model": {
              "conditions": [
                {
                  "evaluator": {
                    "params": [
                      0.0001
                    ],
                    "type": "gt"
                  },
                  "operator": {
                    "type": "and"
                  },
                  "query": {
                    "params": [
                      "C"
                    ]
                  },
                  "reducer": {
                    "params": [],
                    "type": "last"
                  },
                  "type": "query"
                }
              ],
              "datasource": {
                "type": "__expr__",
                "uid": "__expr__"
              },
              "expression": "B",
              "hide": false,
              "intervalMs": 1000,
              "maxDataPoints": 43200,
              "refId": "C",
              "type": "threshold"
            },
            "queryType": "",
            "refId": "C",
            "relativeTimeRange": {
              "from": 300,
              "to": 0
            }
          }
        ],
        "exec_err_state": "Error",
        "intervalSeconds": 60,
        "is_paused": false,
        "no_data_state": "NoData",
        "rule_group": "osparc_alerts",
        "title": "container_died_killed_oom_event",
        "updated": "2023-04-17T09:34:58Z",
        "version": 3
      }
    },
    {
      "annotations": {
        "description": "A docker service or container might have limited CPU resources, but if excessive throttling is going on this might cause issues. Give the firing container more CPU resources, both in portainer and persistently in the docker-compose.yml file.",
        "summary": "This container needs more CPU resources."
      },
      "expr": "",
      "for": "5m",
      "grafana_alert": {
        "condition": "C",
        "data": [
          {
            "datasourceUid": "RmZEr52nz",
            "model": {
              "editorMode": "code",
              "expr": "sum by (instance, image, name) (rate(container_cpu_cfs_throttled_seconds_total[3m]))",
              "format": "time_series",
              "hide": false,
              "intervalMs": 1000,
              "legendFormat": "__auto",
              "maxDataPoints": 43200,
              "range": true,
              "refId": "A"
            },
            "queryType": "",
            "refId": "A",
            "relativeTimeRange": {
              "from": 600,
              "to": 0
            }
          },
          {
            "datasourceUid": "__expr__",
            "model": {
              "conditions": [
                {
                  "evaluator": {
                    "params": [],
                    "type": "gt"
                  },
                  "operator": {
                    "type": "and"
                  },
                  "query": {
                    "params": [
                      "B"
                    ]
                  },
                  "reducer": {
                    "params": [],
                    "type": "last"
                  },
                  "type": "query"
                }
              ],
              "datasource": {
                "type": "__expr__",
                "uid": "__expr__"
              },
              "expression": "A",
              "hide": false,
              "intervalMs": 1000,
              "maxDataPoints": 43200,
              "reducer": "mean",
              "refId": "B",
              "settings": {
                "mode": "dropNN"
              },
              "type": "reduce"
            },
            "queryType": "",
            "refId": "B",
            "relativeTimeRange": {
              "from": 600,
              "to": 0
            }
          },
          {
            "datasourceUid": "__expr__",
            "model": {
              "conditions": [
                {
                  "evaluator": {
                    "params": [
                      1
                    ],
                    "type": "gt"
                  },
                  "operator": {
                    "type": "and"
                  },
                  "query": {
                    "params": [
                      "C"
                    ]
                  },
                  "reducer": {
                    "params": [],
                    "type": "last"
                  },
                  "type": "query"
                }
              ],
              "datasource": {
                "type": "__expr__",
                "uid": "__expr__"
              },
              "expression": "B",
              "hide": false,
              "intervalMs": 1000,
              "maxDataPoints": 43200,
              "refId": "C",
              "type": "threshold"
            },
            "queryType": "",
            "refId": "C",
            "relativeTimeRange": {
              "from": 600,
              "to": 0
            }
          }
        ],
        "exec_err_state": "Error",
        "intervalSeconds": 60,
        "is_paused": false,
        "no_data_state": "NoData",
        "rule_group": "osparc_alerts",
        "title": "High CPU throttling for container",
        "updated": "2023-04-13T05:33:52Z",
        "version": 2
      }
    }
  ]
}
