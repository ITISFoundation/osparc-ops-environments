services:
  agent:
    volumes:
      - /docker/volumes/:/docker/volumes/
  dask-sidecar:
    deploy:
      placement:
        constraints:
          - node.role == worker
  efs-guardian:
    volumes:
      - efs_volume:/data/efs

  clusters-keeper:
    deploy:
      replicas: 1
  resource-usage-tracker:
    deploy:
      replicas: 3
  static-webserver:
    hostname: "{{.Node.Hostname}}-{{.Service.Name}}"
  postgres:
    deploy:
      replicas: 0
  traefik:
    command:
      - "--api=true"
      - "--api.dashboard=true"
      - "--ping=true"
      - "--entryPoints.ping.address=:9082"
      - "--ping.entryPoint=ping"
      - "--log.level=${SIMCORE_TRAEFIK_LOGLEVEL}"
      - "--accesslog=false"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      - "--entryPoints.metrics.address=:8082"
      - "--metrics.prometheus.entryPoint=metrics"
      - "--entryPoints.http.address=:80"
      - "--entryPoints.http.forwardedHeaders.insecure"
      - "--entryPoints.postgres.address=:5432"
      - "--entryPoints.simcore_api.address=:10081"
      - "--entryPoints.simcore_api.forwardedHeaders.insecure"
      - "--entryPoints.traefik_monitor.address=:8080"
      - "--entryPoints.traefik_monitor.forwardedHeaders.insecure"
      - "--providers.swarm.endpoint=unix:///var/run/docker.sock"
      - "--providers.swarm.network=${SWARM_STACK_NAME}_default"      # https://github.com/traefik/traefik/issues/7886
      - "--providers.swarm.refreshSeconds=1"
      - "--providers.swarm.exposedByDefault=false"
      - "--providers.swarm.constraints=Label(`io.simcore.zone`, `${TRAEFIK_SIMCORE_ZONE}`)"
      - "--tracing=true"
      - "--tracing.addinternals"
      - "--tracing.otlp=true"
      - "--tracing.otlp.http=true"
    deploy:
      resources:
        limits:
          memory: 2048M

  payments:
    deploy:
      replicas: 1

  wb-api-server:
    deploy:
      replicas: 3

  redis:
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=${PUBLIC_NETWORK}
        - traefik.tcp.services.${SWARM_STACK_NAME}_redis.loadBalancer.server.port=6379
        - traefik.tcp.routers.redis.service=${SWARM_STACK_NAME}_redis
        - traefik.tcp.routers.redis.entrypoints=redis
        - traefik.tcp.routers.redis.tls=false
        - traefik.tcp.routers.redis.rule=ClientIP(`10.0.0.0/8`) || ClientIP(`172.16.0.0/12`) || ClientIP(`192.168.0.0/16`)
    networks:
      - public

volumes:
   efs_volume:
       driver_opts:
           type: nfs
           o: addr=${EFS_DNS_NAME},rw,nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport
           device: :/
