services:
  autoscaling:
    deploy:
      replicas: 0
  agent:
    volumes:
      - /docker/volumes/:/docker/volumes/
  postgres:
    labels:
      - "pgbackup.enable=true"
    deploy:
      placement:
          constraints:
            - node.labels.postgres == true
  dask-sidecar:
    deploy:
      placement:
        constraints:
          - node.role == worker
  resource-usage-tracker:
    deploy:
      replicas: 3
  traefik:
    command:
      - "--api=true"
      - "--api.dashboard=true"
      - "--ping=true"
      - "--entryPoints.ping.address=:9082"
      - "--ping.entryPoint=ping"
      - "--log.level=${SIMCORE_TRAEFIK_LOGLEVEL}"
      - "--accesslog=false"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      - "--entryPoints.metrics.address=:8082"
      - "--metrics.prometheus.entryPoint=metrics"
      - "--entryPoints.http.address=:80"
      - "--entryPoints.http.forwardedHeaders.insecure"
      - "--entryPoints.postgres.address=:5432"
      - "--entryPoints.simcore_api.address=:10081"
      - "--entryPoints.simcore_api.forwardedHeaders.insecure"
      - "--entryPoints.traefik_monitor.address=:8080"
      - "--entryPoints.traefik_monitor.forwardedHeaders.insecure"
      - "--providers.swarm.endpoint=unix:///var/run/docker.sock"
      - "--providers.swarm.network=${SWARM_STACK_NAME}_default"
      # https://github.com/traefik/traefik/issues/7886
      - "--providers.swarm.refreshSeconds=1"
      - "--providers.swarm.exposedByDefault=false"
      - "--providers.swarm.constraints=Label(`io.simcore.zone`, `${TRAEFIK_SIMCORE_ZONE}`)"
      - "--tracing=true"
      - "--tracing.addinternals"
      - "--tracing.otlp=true"
      - "--tracing.otlp.http=true"
    deploy:
      resources:
        limits:
          memory: 2048M
          cpus: '2.000'
      labels:
        - traefik.tcp.routers.${SWARM_STACK_NAME}_postgresRoute.entrypoints=${PREFIX_STACK_NAME}_postgres
        - traefik.tcp.routers.${SWARM_STACK_NAME}_postgresRoute.tls=false
        - traefik.tcp.routers.${SWARM_STACK_NAME}_postgresRoute.service=${SWARM_STACK_NAME}_postgresRoute
        - traefik.tcp.services.${SWARM_STACK_NAME}_postgresRoute.loadbalancer.server.port=5432
        - "traefik.tcp.routers.${SWARM_STACK_NAME}_postgresRoute.rule=ClientIP(`195.176.8.0/24`) || ClientIP(`10.0.0.0/8`) || ClientIP(`172.16.0.0/12`) || ClientIP(`192.168.0.0/16`)"
  wb-garbage-collector:
    hostname: "{{.Service.Name}}"
  wb-api-server:
    deploy:
      replicas: 3
  clusters-keeper:
    deploy:
      replicas: 0
  payments:
    deploy:
      replicas: 0
