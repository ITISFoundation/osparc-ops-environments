services:
  autoscaling:
    deploy:
      replicas: 0
  postgres:
    labels:
      - "pgbackup.enable=true"
    deploy:
      placement:
        constraints:
          - node.labels.postgres==true

  static-webserver:
    hostname: "{{.Node.Hostname}}-{{.Service.Name}}"
  traefik:
    deploy:
      labels:
        - prometheus-job=traefik_simcore_production
        # oSparc postgres
        - traefik.tcp.routers.${SWARM_STACK_NAME}_postgresRoute.entrypoints=postgres
        - traefik.tcp.routers.${SWARM_STACK_NAME}_postgresRoute.tls=false
        - traefik.tcp.routers.${SWARM_STACK_NAME}_postgresRoute.service=${SWARM_STACK_NAME}_postgresRoute
        - traefik.tcp.services.${SWARM_STACK_NAME}_postgresRoute.loadbalancer.server.port=5432
        - "traefik.tcp.routers.${SWARM_STACK_NAME}_postgresRoute.rule=ClientIP(`195.176.8.0/24`) || ClientIP(`10.0.0.0/8`) || ClientIP(`172.16.0.0/12`) || ClientIP(`192.168.0.0/16`)"

  wb-garbage-collector:
    hostname: "{{.Service.Name}}"
  payments:
    deploy:
      replicas: 0
  clusters-keeper:
    deploy:
      replicas: 0
