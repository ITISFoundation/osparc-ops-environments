version: "3.7"
configs:
  opentelemetry-collector-config:
    file: ./opentelemetry-collector-config.yaml
services:
  jaeger:
    image: jaegertracing/all-in-one:1.60.0
    command: >
      --query.base-path=/jaeger
    init: true
    networks:
      - public
      - monitored
    environment:
      MEMORY_MAX_TRACES: 10000
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=${PUBLIC_NETWORK}
        - traefik.http.services.jaeger.loadbalancer.server.port=16686
        - traefik.http.routers.jaeger.rule=Host(`${MONITORING_DOMAIN}`) && PathPrefix(`/jaeger`)
        - traefik.http.routers.jaeger.entrypoints=https
        - traefik.http.routers.jaeger.tls=true
        - traefik.http.routers.jaeger.middlewares=ops_whitelist_ips@swarm, ops_auth@swarm, ops_gzip@swarm
        - prometheus-job=jaeger
        - prometheus-port=14269
      resources:
        limits:
          memory: 200M
          cpus: "1"
        reservations:
          memory: 64M
          cpus: "0.1"
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.105.0
    configs:
      - source: opentelemetry-collector-config
        target: /etc/otel/config.yaml
    hostname: "{{.Node.Hostname}}-{{.Task.Slot}}"
    command:
      - "--config=/etc/otel/config.yaml"
    ports:
      - "4318:4318"  # OTLP HTTP receiver
    networks:
      - public
      - monitored
    environment:
      TRACING_OPENTELEMETRY_COLLECTOR_BATCH_SIZE: ${TRACING_OPENTELEMETRY_COLLECTOR_BATCH_SIZE}
      TRACING_OPENTELEMETRY_COLLECTOR_SAMPLING_PERCENTAGE: ${TRACING_OPENTELEMETRY_COLLECTOR_SAMPLING_PERCENTAGE}
      TRACING_OPENTELEMETRY_COLLECTOR_EXPORTER_ENDPOINT: ${TRACING_OPENTELEMETRY_COLLECTOR_EXPORTER_ENDPOINT}
      TRACING_OPENTELEMETRY_COLLECTOR_SERVICE_TELEMETRY_LOG_LEVEL: ${TRACING_OPENTELEMETRY_COLLECTOR_SERVICE_TELEMETRY_LOG_LEVEL}
networks:
  public:
    external: true
    name: ${PUBLIC_NETWORK}
  monitored:
    name: ${MONITORED_NETWORK}
    external: true
