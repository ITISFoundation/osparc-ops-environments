receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317  # Default endpoint for OTLP over gRPC
      http:
        endpoint: 0.0.0.0:4318 # Default endpoint for OTLP over HTTP
exporters:
  otlphttp:
    endpoint: ${TRACING_OPENTELEMETRY_COLLECTOR_EXPORTER_ENDPOINT}  # Adjust to your Jaeger endpoint
  otlp:
    endpoint: http://tempo:4317
    tls:
      insecure: true
service:
  pipelines:
    traces:
      receivers: [otlp]
      exporters: [otlphttp,otlp]
      processors: [batch,filter/drop_healthcheck]
  telemetry:
    logs:
      level: ${TRACING_OPENTELEMETRY_COLLECTOR_SERVICE_TELEMETRY_LOG_LEVEL}
processors:
  batch:
    timeout: 5s
    send_batch_size: ${TRACING_OPENTELEMETRY_COLLECTOR_BATCH_SIZE}
  filter/drop_healthcheck:
    error_mode: ignore
    traces:
      span:
        - attributes["http.route"] == "/health"
        - attributes["http.target"] == "/socket.io/"
        - attributes["url.path"] == "/socket.io/"
        - IsMatch(attributes["server.address"], "^monitoring..*")
        - attributes["net.peer.name"] == "/var/run/docker.sock"
        - attributes["http.route"] == "healthcheck_readiness_probe"
        - attributes["http.route"] == "healthcheck_liveness_probe"
        - attributes["http.target"] == "/metrics" and IsMatch(attributes["http.user_agent"], ".*Prometheus.*") == true
        - attributes["db.statement"] == "PING" and attributes["db.system"] == "redis"
