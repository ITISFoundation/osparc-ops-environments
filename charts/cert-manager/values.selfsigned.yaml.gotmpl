cert-manager:
  extraObjects:
  - |
    apiVersion: cert-manager.io/v1
    kind: ClusterIssuer
    metadata:
      name: selfsigned-issuer
      namespace: {{ .Release.Namespace }}
      annotations:
        # It depends on cert-manager CRDs. We need to wait for CRDs to be installed
        "helm.sh/hook": post-install,post-upgrade
        "helm.sh/hook-weight": "1"
    spec:
      selfSigned: {}
  - |
    apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      name: local-ca
      namespace: {{ .Release.Namespace }}
      annotations:
        # It depends on cert-manager CRDs. We need to wait for CRDs to be installed
        "helm.sh/hook": post-install,post-upgrade
        "helm.sh/hook-weight": "1"
    spec:
      secretTemplate:
        annotations:
          reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
          reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: ""  # Control destination namespaces: emptystring means all
          reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true" # Auto create reflection for matching namespaces
          reflector.v1.k8s.emberstack.com/reflection-auto-namespaces: "" # Control auto-reflection namespaces
      isCA: true
      commonName: local-ca
      subject:
        organizations:
          - Z43
      secretName: local-ca-secret
      privateKey:
        algorithm: ECDSA
        size: 256
      issuerRef:
        name: selfsigned-issuer
        kind: ClusterIssuer
        group: cert-manager.io
  - |
    apiVersion: cert-manager.io/v1
    kind: ClusterIssuer
    metadata:
      name: cert-issuer
      namespace: {{ .Release.Namespace }}
      annotations:
        # It depends on cert-manager CRDs. We need to wait for CRDs to be installed
        "helm.sh/hook": post-install,post-upgrade
        "helm.sh/hook-weight": "1"
    spec:
      ca:
        secretName: local-ca-secret
