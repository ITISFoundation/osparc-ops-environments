# Values documentation:
# https://github.com/longhorn/longhorn/tree/v1.8.1/chart#values

global:
  # Warning: updating node selectors (after installation) will cause downtime
  # https://longhorn.io/docs/archives/1.2.2/advanced-resources/deploy/node-selector/#setting-up-node-selector-after-longhorn-has-been-installed
  #
  # Warning: using node selectors will restrict our workloads to the same nodes
  # https://longhorn.io/kb/tip-only-use-storage-on-a-set-of-nodes/#deploy-longhorn-components-only-on-a-specific-set-of-nodes
  nodeSelector: {}
  systemManagedComponentsNodeSelector: {}

defaultSettings:
  replicaAutoBalance: best-effort

  # control on which nodes LH will use disks
  # use `node.longhorn.io/create-default-disk` node label for control
  createDefaultDiskLabeledNodes: true
  # use dedicated folder (disk) for storage
  defaultDataPath: /longhorn

  # https://longhorn.io/docs/1.8.1/best-practices/#minimal-available-storage-and-over-provisioning
  storageMinimalAvailablePercentage: 10

  # Prevent LH deletion. Set to true if you want to delete LH
  deletingConfirmationFlag: false

  # let replicas to be scheduled on the same node
  replicaSoftAntiAffinity: false

  # we always use dedicated disks. 5% is a good value
  storageReservedPercentageForDefaultDisk: 5

persistence:
  # use only for non-critical ops workloads
  # for critical workloads (e.g. database)
  # use application replication (e.g. postgres HA operator)
  defaultClass: false

  # https://longhorn.io/docs/1.8.1/best-practices/#io-performance
  defaultDataLocality: best-effort
  defaultClassReplicaCount: 2

  # minimum volume size is 300Mi
  # https://github.com/longhorn/longhorn/issues/8488
  defaultFsType: xfs

resources: # https://longhorn.io/docs/1.8.1/best-practices/#minimum-recommended-hardware
    requests:
      cpu: 0.5
      memory: 128Mi
    limits:
      cpu: 4
      memory: 4Gi

ingress:
    enabled: true
    className: ""
    annotations:
      namespace: {{ .Release.Namespace }}
      cert-manager.io/cluster-issuer: "cert-issuer"
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.middlewares: traefik-traefik-basic-auth@kubernetescrd,traefik-longhorn-strip-prefix@kubernetescrd  # namespace + middleware name
    tls: true
    tlsSecret: monitoring-tls
    host: {{ requiredEnv "K8S_MONITORING_FQDN" }}
    path: /longhorn
    pathType: Prefix
