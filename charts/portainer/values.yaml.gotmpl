servicePort: &servicePort 9000

portainer:
  replicaCount: 1

  image:
    repository: portainer/portainer-ce
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: portainer-sa-clusteradmin

  persistence: {}

  # podAnnotations: {}
  # Not implemented in portainer chart (see https://github.com/portainer/k8s/pull/183)
  # Once implemented, we can use it to add checksum of network policy like in adminer

  podLabels: {}

  podSecurityContext:
    {}

  securityContext:
    {}

  service:
    type: "ClusterIP"
    port: *servicePort

  ingress:
    enabled: true
    className: ""
    annotations:
      namespace: {{ .Release.Namespace }}
      cert-manager.io/cluster-issuer: "cert-issuer"
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.middlewares: traefik-traefik-basic-auth@kubernetescrd,traefik-portainer-strip-prefix@kubernetescrd  # namespace + middleware name
    tls:
      - hosts:
          - {{ requiredEnv "K8S_MONITORING_FQDN" }}
        secretName: monitoring-tls
    hosts:
      - host: {{ requiredEnv "K8S_MONITORING_FQDN" }}
        paths:
          - path: /portainer
            pathType: Prefix
            backend:
              service:
                name: portainer
                port:
                  number: *servicePort

  resources:
    limits:
      cpu: 2
      memory: 1024Mi
    requests:
      cpu: 0.1
      memory: 128Mi

  nodeSelector:
    ops: "true"
